type ExpressionToken = {};
type ConstantExpressionToken = {};
type VariableExpressionToken = {};
type OperationExpressionToken = {};
type LambdaParameterTypeToken = {};
type LambdaInferredParameterTypeToken = {};
type SpecifiedLambdaParameterTypeToken = {};
type LambdaParameterToken = {};
type LambdaExpressionToken = {};
type InvocationExpressionToken = {};
type TernaryExpressionToken = {};
type CastExpressionToken = {};
type ObjectMemberToken = {};
type ObjectExpressionToken = {};
type IdentifierToken = {};
type SimpleIdentifierToken = {};
type IndexedAccessIdentifierToken = {};
type MemberAccessIdentifierToken = {};
type StatementToken = {};
type DeclarationTypeToken = {};
type BlockStatementToken = {};
type InferredDeclaredTypeToken = {};
type TypeDescriptorTypeToken = {};
type VariableDeclarationStatementToken = {};
type TypeDeclarationStatementToken = {};
type TypeDescriptorToken = {};
type IdTypeDescriptorToken = {};
type LiteralTypeDescriptorToken = {};
type ArrayTypeDescriptorToken = {};
type UnionTypeDescriptorToken = {};
type IntersectionTypeDescriptorToken = {};
type RecordTypeDescriptorToken = {};
type FuncTypeDescriptorToken = {};
type ValueToken = {};
type IntLiteralValueToken = {};
type FloatLiteralValueToken = {};
type BoolLiteralValueToken = {};
type StringLiteralValueToken = {};
type SyntaxToken = {};
type SourceCode = {};
type SyntaxTree = {};
type SourcePosition = {};
type SourceSlice = {};
type TypeParameterToken = {};
type UtilityResult = {};
type CompilationIssue = {};
type SyntaxError = {};
type IssueLocation = {};
type TypeEntity = {};
type AliasedTypeEntity = {};
type PrimitiveTypeEntity = {};
type LiteralTypeEntity = {};
type ArrayTypeEntity = {};
type UnionTypeEntity = {};
type IntersectionTypeEntity = {};
type TupleTypeEntity = {};
type RecordTypeEntity = {};
type FuncTypeEntity = {};
type KnownMethod = {};
type KnownOperator = {};
type KnownUnaryOperator = {};
type KnownBinaryOperator = {};
type KnownValue = {};
type Scope = {};
type ScopedResult = {};
type SourceContext = {};
type ScopedTableJson = {};
